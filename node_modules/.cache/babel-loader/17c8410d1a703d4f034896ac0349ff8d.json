{"ast":null,"code":"import { apiData } from \"./constants\";\n\nclass Api {\n  constructor(options) {\n    this._host = options.host;\n    this._headers = options.headers;\n  }\n\n  getUserInfo() {\n    return fetch(`${this._host}/users/me`, {\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      ;\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  getInitialCards() {\n    return fetch(`${this._host}/cards`, {\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      ;\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  editProfileInfo(data) {\n    return fetch(`${this._host}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.firstname,\n        about: data.description\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      ;\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  addNewCard(name, link) {\n    return fetch(`${this._host}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      ;\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  likeCard(id) {\n    return fetch(`${this._host}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      ;\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  dislikeCard(id) {\n    return fetch(`${this._host}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      ;\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._host}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      ;\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  editAvatar(data) {\n    return fetch(`${this._host}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.link\n      })\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      ;\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n}\n\n;\nexport const api = new Api({\n  host: 'https://mesto.nomoreparties.co/v1/cohort-47',\n  headers: {\n    authorization: 'dcded44e-0130-46c5-aa5b-22f4493838c0',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"names":["apiData","Api","constructor","options","_host","host","_headers","headers","getUserInfo","fetch","then","res","ok","json","Promise","reject","status","getInitialCards","editProfileInfo","data","method","body","JSON","stringify","name","firstname","about","description","addNewCard","link","likeCard","id","dislikeCard","deleteCard","editAvatar","avatar","api","authorization"],"sources":["C:/Users/Dmitriy/dev/mesto-react/mesto-react/src/utils/Api.js"],"sourcesContent":["import { apiData } from \"./constants\";\r\n\r\nclass Api {\r\n    constructor(options) {\r\n        this._host = options.host;\r\n        this._headers = options.headers;\r\n    };\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this._host}/users/me`, {\r\n            headers: this._headers\r\n        })\r\n        .then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            };\r\n\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n    };\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._host}/cards`, {\r\n            headers: this._headers\r\n        })\r\n        .then(res => {\r\n            if(res.ok) {\r\n                return res.json();\r\n            };\r\n\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        });\r\n    };\r\n\r\n    editProfileInfo(data) {\r\n        return fetch(`${this._host}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.firstname,\r\n                about: data.description\r\n            })\r\n        }\r\n        )\r\n        .then(res => {\r\n            if(res.ok) {\r\n                return res.json();\r\n            };\r\n\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        });\r\n    };\r\n\r\n    addNewCard(name, link) {\r\n        return fetch(`${this._host}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                link: link\r\n            })\r\n        })\r\n        .then(res => {\r\n            if(res.ok) {\r\n                return res.json();\r\n            };\r\n\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        });\r\n    };\r\n\r\n    likeCard(id) {\r\n        return fetch(`${this._host}/cards/${id}/likes`, {\r\n            method: 'PUT',\r\n            headers: this._headers\r\n        })\r\n        .then(res => {\r\n            if(res.ok) {\r\n                return res.json();\r\n            };\r\n\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n    };\r\n\r\n    dislikeCard(id) {\r\n        return fetch(`${this._host}/cards/${id}/likes`, {\r\n            method: 'DELETE',\r\n            headers:this._headers\r\n        })\r\n        .then(res => {\r\n            if(res.ok) {\r\n                return res.json();\r\n            };\r\n\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n    }\r\n\r\n    deleteCard(id) {\r\n        return fetch(`${this._host}/cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n        .then(res => {\r\n            if(res.ok) {\r\n                return res.json();\r\n            };\r\n\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        })\r\n    };\r\n\r\n    editAvatar(data) {\r\n        return fetch(`${this._host}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: data.link\r\n            })\r\n        }\r\n        )\r\n        .then(res => {\r\n            if(res.ok) {\r\n                return res.json();\r\n            };\r\n\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        });\r\n    };\r\n};\r\n\r\nexport const api = new Api({host: 'https://mesto.nomoreparties.co/v1/cohort-47',\r\nheaders: {\r\n  authorization: 'dcded44e-0130-46c5-aa5b-22f4493838c0',\r\n                 'Content-Type': 'application/json'\r\n}});"],"mappings":"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"},"metadata":{},"sourceType":"module"}