{"ast":null,"code":"import { apiData } from \"./constants\";\n\nclass Api {\n  constructor(options) {\n    this._host = options.host;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    ;\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._host}/users/me`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._host}/cards`, {\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  editProfileInfo(name, about) {\n    return fetch(`${this._host}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._checkResponse);\n  }\n\n  addNewCard(name, link) {\n    return fetch(`${this._host}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(this._checkResponse);\n  }\n\n  likeCard(id) {\n    return fetch(`${this._host}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  dislikeCard(id) {\n    return fetch(`${this._host}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._host}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  editAvatar(avatar) {\n    return fetch(`${this._host}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n}\n\n;\nexport const api = new Api(apiData);","map":{"version":3,"names":["apiData","Api","constructor","options","_host","host","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","getInitialCards","editProfileInfo","name","about","method","body","JSON","stringify","addNewCard","link","likeCard","id","dislikeCard","deleteCard","editAvatar","avatar","api"],"sources":["C:/Users/Dmitriy/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["import { apiData } from \"./constants\";\r\n\r\nclass Api {\r\n    constructor(options) {\r\n        this._host = options.host;\r\n        this._headers = options.headers;\r\n    };\r\n\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        };\r\n\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this._host}/users/me`, {\r\n            headers: this._headers\r\n        })\r\n        .then(this._checkResponse)\r\n    };\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._host}/cards`, {\r\n            headers: this._headers\r\n        })\r\n        .then(this._checkResponse);\r\n    };\r\n\r\n    editProfileInfo(name, about) {\r\n        return fetch(`${this._host}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                about: about\r\n            })\r\n        }\r\n        )\r\n        .then(this._checkResponse);\r\n    };\r\n\r\n    addNewCard(name, link) {\r\n        return fetch(`${this._host}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: name,\r\n                link: link\r\n            })\r\n        })\r\n        .then(this._checkResponse);\r\n    };\r\n\r\n    likeCard(id) {\r\n        return fetch(`${this._host}/cards/${id}/likes`, {\r\n            method: 'PUT',\r\n            headers: this._headers\r\n        })\r\n        .then(this._checkResponse)\r\n    };\r\n\r\n    dislikeCard(id) {\r\n        return fetch(`${this._host}/cards/${id}/likes`, {\r\n            method: 'DELETE',\r\n            headers:this._headers\r\n        })\r\n        .then(this._checkResponse)\r\n    }\r\n\r\n    deleteCard(id) {\r\n        return fetch(`${this._host}/cards/${id}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n        .then(this._checkResponse)\r\n    };\r\n\r\n    editAvatar(avatar) {\r\n        return fetch(`${this._host}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar,\r\n            })\r\n        }\r\n        )\r\n        .then(this._checkResponse);\r\n    };\r\n};\r\n\r\nexport const api = new Api(apiData);"],"mappings":"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"},"metadata":{},"sourceType":"module"}